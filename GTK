import gi
import subprocess
from gi.repository import Gtk, Gdk

gi.require_version('Gtk', '3.0')

def main():
    try:
        # Load the Glade file (update with your actual path)
        builder = Gtk.Builder()
        builder.add_from_file("/home/operator/tmc/python/images/tormach_mill_ui.glade")

        # Get the main window and drawing area from the Glade file
        window = builder.get_object("main_window")
        drawing_area = builder.get_object("drawing_area")

        if window is None:
            raise ValueError("Main window not found in Glade file.")
        if drawing_area is None:
            raise ValueError("Drawing area not found in Glade file.")

        # Show the window
        window.show_all()

        # Ensure the window and drawing area are fully realized
        window.connect("realize", lambda w: drawing_area.get_window().set_composited(True))
        Gtk.main_iteration()  # Ensure GTK has processed events

        # Get the XID of the drawing area (where the video will be embedded)
        if drawing_area.get_window() is not None:
            xid = drawing_area.get_window().get_xid()
            print("XID of drawing area: {}".format(xid))

            # Command to run mplayer and embed it into the GtkDrawingArea
            command = f"mplayer tv:// -tv driver=v4l2:device=/dev/video0 -wid {xid}"
            print(f"Running command: {command}")  # Debug print statement
            subprocess.Popen(command, shell=True)
        else:
            raise RuntimeError("Failed to retrieve window ID from drawing area.")

        # Start the GTK main loop (this keeps the interface running)
        Gtk.main()

    except Exception as e:
        # Print the detailed exception message
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
